version: '3.7'
services:
  postgres-activefence:
    image: postgres:latest
    restart: unless-stopped
    container_name: postgres-activefence
    environment:
      POSTGRES_PASSWORD: test
      POSTGRES_USER: test
      POSTGRES_DB: test
    ports:
      - 54321:5432
    networks:
      - activefence-test
  frontend-activefence:
    container_name: frontend-activefence
    image: frontend-activefence
    build:
      context: ./front-end
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      AUTH0_SECRET: LONG_RANDOM_VALUE
      AUTH0_BASE_URL: http://localhost:3000
      AUTH0_ISSUER_BASE_URL: https://dev-rwlwuayy3yrz06oo.us.auth0.com
      AUTH0_CLIENT_ID: 4adsq10CnWn3Dgwcrjhs0viqQmydXJfS
      AUTH0_CLIENT_SECRET: UdHpd5JvtikqxY-RMujykxiBT3Fz5GJ5_klAHfCXTBsMmSh-618712iqGm_JIJ9n
      GRAPHQL_ENDPOINT: http://localhost:3001/graphql
    depends_on:
      - backend-activefence
    networks:
      - activefence-test
  backend-activefence:
    container_name: backend-activefence
    image: backend-activefence
    build:
      context: ./back-end
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgres://user:password@db:5432/mydb
      AUTH0_ISSUER_BASE_URL: https://dev-rwlwuayy3yrz06oo.us.auth0.com/
      AUTH0_AUDIENCE: https://dev-rwlwuayy3yrz06oo.us.auth0.com/userinfo
      STAGE_ENV: staging
      DB_SSL: ''
      DB_HOST: postgres-activefence
      DB_PORT: 5432
      DB_USERNAME: test
      DB_PASSWORD: test
      DB_DATABASE: test
    depends_on:
      - postgres-activefence
    networks:
      - activefence-test
networks:
  activefence-test:
    name: activefence-test